apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "wellsfargo.fullname" . }}
spec:
  serviceName: {{ include "wellsfargo.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 2
  selector:
    matchLabels:
      {{- include "wellsfargo.selectorLabels" . | nindent 6 }}
      component: ui
  template:
    metadata:
      labels:
        {{- include "wellsfargo.selectorLabels" . | nindent 8 }}
        component: ui
    spec:
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/scripts/app.sh"]  # Explicitly use app script
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: JAVA_OPTS
              value: "-Diiq.hostname=$(POD_NAME) -Diiq.uinode=true {{ .Values.ui.heap.min }} {{ .Values.ui.heap.max }}"
            - name: DB_HOST
              value: "{{ .Values.initContainer.env.DB_HOST }}"
            - name: DB_PORT
              value: "{{ .Values.initContainer.env.DB_PORT }}"
            - name: DB_USER
              value: "{{ .Values.initContainer.env.DB_USER }}"
            - name: DB_PASS
              value: "{{ .Values.initContainer.env.DB_PASS }}"
            - name: DB_NAME
              value: "{{ .Values.initContainer.env.DB_NAME }}"
            - name: DB_WAIT_TIME
              value: "5"
            - name: UPLOAD_FILE_PATH
              value: "{{ .Values.ui.UPLOAD_FILE_PATH }}"
            - name: FULL_TEXT_INDEX_PATH
              value: "{{ .Values.ui.FULL_TEXT_INDEX_PATH }}"
          ports:
            - containerPort: 8080
              name: http
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          # volumeMounts:
          #   - name: config-volume
          #     mountPath: /opt/tomcat/identityiq/WEB-INF/classes/iiq.properties
          #     subPath: iiq.properties
          #   - name: config-volume
          #     mountPath: /opt/tomcat/identityiq/WEB-INF/classes/log4j2.properties
          #     subPath: log4j2.properties
          #   - name: config-volume
          #     mountPath: /opt/tomcat/identityiq/WEB-INF/classes/keystore
          #     subPath: keystore/
          #   - name: config-volume
          #     mountPath: {{ .Values.task.UPLOAD_FILE_PATH }}
          #     subPath: iiq-upload/
          #   - name: config-volume
          #     mountPath: {{ .Values.task.FULL_TEXT_INDEX_PATH }}
          #     subPath: iiq-index/
          #   - name: logs-volume
          #     mountPath: /opt/tomcat/logs
          resources:
            requests:
              cpu: {{ .Values.ui.resources.requests.cpu | default "100m" }}
              memory: {{ .Values.ui.resources.requests.memory | default "256Mi" }}
            limits:
              cpu: {{ .Values.ui.resources.limits.cpu | default "500m" }}
              memory: {{ .Values.ui.resources.limits.memory | default "512Mi" }}
  #     volumes:
  #       - name: config-volume
  #         persistentVolumeClaim:
  #           claimName: {{ include "wellsfargo.fullname" . }}-config-pvc
  # volumeClaimTemplates:
  # - metadata:
  #     name: logs-volume
  #   spec:
  #     accessModes:
  #       - ReadWriteOnce
  #     storageClassName: {{ .Release.Name }}-iiq-logs-nfs
  #     resources:
  #       requests:
  #         storage: {{ .Values.storage.size | default "5Gi" }}